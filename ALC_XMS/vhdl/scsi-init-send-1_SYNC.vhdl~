library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.NUMERIC_STD.all;

ENTITY scsi_init_send_1_SYNC IS
  PORT (
    INPUT  : IN  STD_LOGIC_VECTOR(3 DOWNTO 0);
    OUTPUT : OUT STD_LOGIC_VECTOR(1 DOWNTO 0);
    RESET  : IN  STD_LOGIC
  );
END ENTITY scsi_init_send_1_SYNC;

ARCHITECTURE ALC_XMS OF scsi_init_send_1_SYNC IS

COMPONENT scsi_init_send_1_SYNC_Block IS
  PORT (
    INPUT  : IN STD_LOGIC_VECTOR(5 DOWNTO 0);
    OUTPUT : OUT STD_LOGIC_VECTOR(3 DOWNTO 0)
  );
END COMPONENT;

COMPONENT D_Latch IS
  Port (
    EN : in  STD_LOGIC;
    D  : in  STD_LOGIC;
    Q  : out STD_LOGIC
  );
END COMPONENT;

  SIGNAL SSTATE : STD_LOGIC_VECTOR(1 DOWNTO 0);
  SIGNAL SNSTATE: STD_LOGIC_VECTOR(1 DOWNTO 0);
  SIGNAL SOUT   : STD_LOGIC_VECTOR(3 DOWNTO 0);

BEGIN
B: scsi_init_send_1_SYNC_Block    PORT MAP(INPUT & SSTATE, BOUT);
STT0: D_Latch    PORT MAP(RESET, SNSTATE(0), SSTATE(0));
STT1: D_Latch    PORT MAP(RESET, SNSTATE(1), SSTATE(1));
OUT0: D_Latch    PORT MAP(RESET, SOUT(0), 1);
OUT1: D_Latch    PORT MAP(RESET, SOUT(1), 1);
 
  PROCESS(INPUT)
  BEGIN
    OUTPUT <= SOUT;
  END PROCESS;
END ALC_XMS;
